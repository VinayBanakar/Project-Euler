import math
# Using pythagorean triplet rule:
# a = k(m^2 - n^2)
# b = 2kmn
# c = k(m^2 + n^2)
# Where k is a multiplicative factor. 
# Also since one side is generated by m^2+n^2 we will just need to check till sqaure root of m/2

limit = 1500000
triangles = [0 for i in range(limit+1)]
result = 0
mlimit = int(math.sqrt(limit/2))

def gcd(a,b):
    x,y= 0,0
    if a>b:
        x = a
        y = b
    else:
        x = b
        y = a
    while x%y != 0:
        temp = x
        x = y
        y = temp %x
    return y

for m in range(2,mlimit):
    for n in range(1,m):
        if ((n + m) % 2) == 1 and gcd(n, m) == 1:
            a = m*m + n*n
            b = m*m - n*n
            c = 2*m*n
            p = a+b+c
            while p <= limit:
                triangles[p] += 1
                if triangles[p] == 1:
                    result+=1
                if triangles[p] == 2:
                    result-=1
                p += a+b+c

print(result, "triangles can be bent one way.")